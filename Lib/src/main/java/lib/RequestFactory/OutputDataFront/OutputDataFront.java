package lib.RequestFactory.OutputDataFront;

import java.util.LinkedList;
import java.util.List;

public class OutputDataFront {
    private static final List<Countries> countries = new LinkedList<>();
    private static final List<String> categories = new LinkedList<>();
    public static List<Countries> getCountries(){
        countries.add(new Countries("Afghanistan","AF"));
        countries.add(new Countries("Åland Islands","AX"));
        countries.add(new Countries("Albania","AL"));
        countries.add(new Countries("Algeria","DZ"));
        countries.add(new Countries("American Samoa","AS"));
        countries.add(new Countries("Andorra","AD"));
        countries.add(new Countries("Angola","AO"));
        countries.add(new Countries("Anguilla","AI"));
        countries.add(new Countries("Antarctica","AQ"));
        countries.add(new Countries("Antigua and Barbuda","AG"));
        countries.add(new Countries("Argentina","AR"));
        countries.add(new Countries("Armenia","AM"));
        countries.add(new Countries("Aruba","AW"));
        countries.add(new Countries("Australia","AU"));
        countries.add(new Countries("Austria","AT"));
        countries.add(new Countries("Azerbaijan","AZ"));
        countries.add(new Countries("Bahamas","BS"));
        countries.add(new Countries("Bahrain","BH"));
        countries.add(new Countries("Bangladesh","BD"));
        countries.add(new Countries("Barbados","BB"));
        countries.add(new Countries("Belarus","BY"));
        countries.add(new Countries("Belgium","BE"));
        countries.add(new Countries("Belize","BZ"));
        countries.add(new Countries("Benin","BJ"));
        countries.add(new Countries("Bermuda","BM"));
        countries.add(new Countries("Bhutan","BT"));
        countries.add(new Countries("Bolivia (Plurinational State of)","BO"));
        countries.add(new Countries("Bonaire, Sint Eustatius and Saba","BQ"));
        countries.add(new Countries("Bosnia and Herzegovina","BA"));
        countries.add(new Countries("Botswana","BW"));
        countries.add(new Countries("Bouvet Island","BV"));
        countries.add(new Countries("Brazil","BR"));
        countries.add(new Countries("British Indian Ocean Territory","IO"));
        countries.add(new Countries("Brunei Darussalam","BN"));
        countries.add(new Countries("Bulgaria","BG"));
        countries.add(new Countries("Burkina Faso","BF"));
        countries.add(new Countries("Burundi","BI"));
        countries.add(new Countries("Cabo Verde","CV"));
        countries.add(new Countries("Cambodia","KH"));
        countries.add(new Countries("Cameroon","CM"));
        countries.add(new Countries("Canada","CA"));
        countries.add(new Countries("Cayman Islands","KY"));
        countries.add(new Countries("Central African Republic","CF"));
        countries.add(new Countries("Chad","TD"));
        countries.add(new Countries("Chile","CL"));
        countries.add(new Countries("China","CN"));
        countries.add(new Countries("Christmas Island","CX"));
        countries.add(new Countries("Cocos (Keeling) Islands","CC"));
        countries.add(new Countries("Colombia","CO"));
        countries.add(new Countries("Comoros","KM"));
        countries.add(new Countries("Congo","CG"));
        countries.add(new Countries("Congo (Democratic Republic of the)","CD"));
        countries.add(new Countries("Cook Islands","CK"));
        countries.add(new Countries("Costa Rica","CR"));
        countries.add(new Countries("Côte d'Ivoire","CI"));
        countries.add(new Countries("Croatia","HR"));
        countries.add(new Countries("Cuba","CU"));
        countries.add(new Countries("Curaçao","CW"));
        countries.add(new Countries("Cyprus","CY"));
        countries.add(new Countries("Czechia","CZ"));
        countries.add(new Countries("Denmark","DK"));
        countries.add(new Countries("Djibouti","DJ"));
        countries.add(new Countries("Dominica","DM"));
        countries.add(new Countries("Dominican Republic","DO"));
        countries.add(new Countries("Ecuador","EC"));
        countries.add(new Countries("Egypt","EG"));
        countries.add(new Countries("El Salvador","SV"));
        countries.add(new Countries("Equatorial Guinea","GQ"));
        countries.add(new Countries("Eritrea","ER"));
        countries.add(new Countries("Estonia","EE"));
        countries.add(new Countries("Ethiopia","ET"));
        countries.add(new Countries("Falkland Islands (Malvinas)","FK"));
        countries.add(new Countries("Faroe Islands","FO"));
        countries.add(new Countries("Fiji","FJ"));
        countries.add(new Countries("Finland","FI"));
        countries.add(new Countries("France","FR"));
        countries.add(new Countries("French Guiana","GF"));
        countries.add(new Countries("French Polynesia","PF"));
        countries.add(new Countries("French Southern Territories","TF"));
        countries.add(new Countries("Gabon","GA"));
        countries.add(new Countries("Gambia","GM"));
        countries.add(new Countries("Georgia","GE"));
        countries.add(new Countries("Germany","DE"));
        countries.add(new Countries("Ghana","GH"));
        countries.add(new Countries("Gibraltar","GI"));
        countries.add(new Countries("Greece","GR"));
        countries.add(new Countries("Greenland","GL"));
        countries.add(new Countries("Grenada","GD"));
        countries.add(new Countries("Guadeloupe","GP"));
        countries.add(new Countries("Guam","GU"));
        countries.add(new Countries("Guatemala","GT"));
        countries.add(new Countries("Guernsey","GG"));
        countries.add(new Countries("Guinea","GN"));
        countries.add(new Countries("Guinea-Bissau","GW"));
        countries.add(new Countries("Guyana","GY"));
        countries.add(new Countries("Haiti","HT"));
        countries.add(new Countries("Heard Island and McDonald Islands","HM"));
        countries.add(new Countries("Holy See","VA"));
        countries.add(new Countries("Honduras","HN"));
        countries.add(new Countries("Hong Kong","HK"));
        countries.add(new Countries("Hungary","HU"));
        countries.add(new Countries("Iceland","IS"));
        countries.add(new Countries("India","IN"));
        countries.add(new Countries("Indonesia","ID"));
        countries.add(new Countries("Iran (Islamic Republic of)","IR"));
        countries.add(new Countries("Iraq","IQ"));
        countries.add(new Countries("Ireland","IE"));
        countries.add(new Countries("Isle of Man","IM"));
        countries.add(new Countries("Israel","IL"));
        countries.add(new Countries("Italy","IT"));
        countries.add(new Countries("Jamaica","JM"));
        countries.add(new Countries("Japan","JP"));
        countries.add(new Countries("Jersey","JE"));
        countries.add(new Countries("Jordan","JO"));
        countries.add(new Countries("Kazakhstan","KZ"));
        countries.add(new Countries("Kenya","KE"));
        countries.add(new Countries("Kiribati","KI"));
        countries.add(new Countries("Korea (Democratic People's Republic of)","KP"));
        countries.add(new Countries("Korea (Republic of)","KR"));
        countries.add(new Countries("Kuwait","KW"));
        countries.add(new Countries("Kyrgyzstan","KG"));
        countries.add(new Countries("Lao People's Democratic Republic","LA"));
        countries.add(new Countries("Latvia","LV"));
        countries.add(new Countries("Lebanon","LB"));
        countries.add(new Countries("Lesotho","LS"));
        countries.add(new Countries("Liberia","LR"));
        countries.add(new Countries("Libya","LY"));
        countries.add(new Countries("Liechtenstein","LI"));
        countries.add(new Countries("Lithuania","LT"));
        countries.add(new Countries("Luxembourg","LU"));
        countries.add(new Countries("Macao","MO"));
        countries.add(new Countries("Macedonia (the former Yugoslav Republic of)","MK"));
        countries.add(new Countries("Madagascar","MG"));
        countries.add(new Countries("Malawi","MW"));
        countries.add(new Countries("Malaysia","MY"));
        countries.add(new Countries("Maldives","MV"));
        countries.add(new Countries("Mali","ML"));
        countries.add(new Countries("Malta","MT"));
        countries.add(new Countries("Marshall Islands","MH"));
        countries.add(new Countries("Martinique","MQ"));
        countries.add(new Countries("Mauritania","MR"));
        countries.add(new Countries("Mauritius","MU"));
        countries.add(new Countries("Mayotte","YT"));
        countries.add(new Countries("Mexico","MX"));
        countries.add(new Countries("Micronesia (Federated States of)","FM"));
        countries.add(new Countries("Moldova (Republic of)","MD"));
        countries.add(new Countries("Monaco","MC"));
        countries.add(new Countries("Mongolia","MN"));
        countries.add(new Countries("Montenegro","ME"));
        countries.add(new Countries("Montserrat","MS"));
        countries.add(new Countries("Morocco","MA"));
        countries.add(new Countries("Mozambique","MZ"));
        countries.add(new Countries("Myanmar","MM"));
        countries.add(new Countries("Namibia","NA"));
        countries.add(new Countries("Nauru","NR"));
        countries.add(new Countries("Nepal","NP"));
        countries.add(new Countries("Netherlands","NL"));
        countries.add(new Countries("New Caledonia","NC"));
        countries.add(new Countries("New Zealand","NZ"));
        countries.add(new Countries("Nicaragua","NI"));
        countries.add(new Countries("Niger","NE"));
        countries.add(new Countries("Nigeria","NG"));
        countries.add(new Countries("Niue","NU"));
        countries.add(new Countries("Norfolk Island","NF"));
        countries.add(new Countries("Northern Mariana Islands","MP"));
        countries.add(new Countries("Norway","NO"));
        countries.add(new Countries("Oman","OM"));
        countries.add(new Countries("Pakistan","PK"));
        countries.add(new Countries("Palau","PW"));
        countries.add(new Countries("Palestine, State of","PS"));
        countries.add(new Countries("Panama","PA"));
        countries.add(new Countries("Papua New Guinea","PG"));
        countries.add(new Countries("Paraguay","PY"));
        countries.add(new Countries("Peru","PE"));
        countries.add(new Countries("Philippines","PH"));
        countries.add(new Countries("Pitcairn","PN"));
        countries.add(new Countries("Poland","PL"));
        countries.add(new Countries("Portugal","PT"));
        countries.add(new Countries("Puerto Rico","PR"));
        countries.add(new Countries("Qatar","QA"));
        countries.add(new Countries("Réunion","RE"));
        countries.add(new Countries("Romania","RO"));
        countries.add(new Countries("Russian Federation","RU"));
        countries.add(new Countries("Rwanda","RW"));
        countries.add(new Countries("Saint Barthélemy","BL"));
        countries.add(new Countries("Saint Helena, Ascension and Tristan da Cunha","SH"));
        countries.add(new Countries("Saint Kitts and Nevis","KN"));
        countries.add(new Countries("Saint Lucia","LC"));
        countries.add(new Countries("Saint Martin (French part)","MF"));
        countries.add(new Countries("Saint Pierre and Miquelon","PM"));
        countries.add(new Countries("Saint Vincent and the Grenadines","VC"));
        countries.add(new Countries("Samoa","WS"));
        countries.add(new Countries("San Marino","SM"));
        countries.add(new Countries("Sao Tome and Principe","ST"));
        countries.add(new Countries("Saudi Arabia","SA"));
        countries.add(new Countries("Senegal","SN"));
        countries.add(new Countries("Serbia","RS"));
        countries.add(new Countries("Seychelles","SC"));
        countries.add(new Countries("Sierra Leone","SL"));
        countries.add(new Countries("Singapore","SG"));
        countries.add(new Countries("Sint Maarten (Dutch part)","SX"));
        countries.add(new Countries("Slovakia","SK"));
        countries.add(new Countries("Slovenia","SI"));
        countries.add(new Countries("Solomon Islands","SB"));
        countries.add(new Countries("Somalia","SO"));
        countries.add(new Countries("South Africa","ZA"));
        countries.add(new Countries("South Georgia and the South Sandwich Islands","GS"));
        countries.add(new Countries("South Sudan","SS"));
        countries.add(new Countries("Spain","ES"));
        countries.add(new Countries("Sri Lanka","LK"));
        countries.add(new Countries("Sudan","SD"));
        countries.add(new Countries("Suriname","SR"));
        countries.add(new Countries("Svalbard and Jan Mayen","SJ"));
        countries.add(new Countries("Swaziland","SZ"));
        countries.add(new Countries("Sweden","SE"));
        countries.add(new Countries("Switzerland","CH"));
        countries.add(new Countries("Syrian Arab Republic","SY"));
        countries.add(new Countries("Taiwan, Province of China[a]","TW"));
        countries.add(new Countries("Tajikistan","TJ"));
        countries.add(new Countries("Tanzania, United Republic of","TZ"));
        countries.add(new Countries("Thailand","TH"));
        countries.add(new Countries("Timor-Leste","TL"));
        countries.add(new Countries("Togo","TG"));
        countries.add(new Countries("Tokelau","TK"));
        countries.add(new Countries("Tonga","TO"));
        countries.add(new Countries("Trinidad and Tobago","TT"));
        countries.add(new Countries("Tunisia","TN"));
        countries.add(new Countries("Turkey","TR"));
        countries.add(new Countries("Turkmenistan","TM"));
        countries.add(new Countries("Turks and Caicos Islands","TC"));
        countries.add(new Countries("Tuvalu","TV"));
        countries.add(new Countries("Uganda","UG"));
        countries.add(new Countries("Ukraine","UA"));
        countries.add(new Countries("United Arab Emirates","AE"));
        countries.add(new Countries("United Kingdom of Great Britain and Northern Ireland","GB"));
        countries.add(new Countries("United States of America","US"));
        countries.add(new Countries("United States Minor Outlying Islands","UM"));
        countries.add(new Countries("Uruguay","UY"));
        countries.add(new Countries("Uzbekistan","UZ"));
        countries.add(new Countries("Vanuatu","VU"));
        countries.add(new Countries("Venezuela (Bolivarian Republic of)","VE"));
        countries.add(new Countries("Viet Nam","VN"));
        countries.add(new Countries("Virgin Islands (British)","VG"));
        countries.add(new Countries("Virgin Islands (U.S.)","VI"));
        countries.add(new Countries("Wallis and Futuna","WF"));
        countries.add(new Countries("Western Sahara","EH"));
        countries.add(new Countries("Yemen","YE"));
        countries.add(new Countries("Zambia","ZM"));
        countries.add(new Countries("Zimbabwe","ZW"));
        return countries;
    }

    public static List<String> getCategories(){
        categories.add("business");
        categories.add("entertainment");
        categories.add("health");
        categories.add("science");
        categories.add("technology");
        categories.add("sports");
        categories.add("general");
        return categories;
    }
}
